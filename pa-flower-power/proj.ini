#define ledPin 2
#define greenPin 4
#define trigPin 9
#define echoPin 10

#define relayPin1 A4
#define relayPin2 A5
#define relayPin3 A3

#define sensorPin1 A0
#define sensorPin2 A1
#define sensorPin3 A2

const int distanceThreshold = 20;
const int humidityThreshold = 350;

const float distanceFactor = 0.034;

int sensorPins[3] = { sensorPin1, sensorPin2, sensorPin3 };
int relayPins[3] = { relayPin1, relayPin2, relayPin3 };

void setup() {
  int numInputs = 4;
  int numOutputs = 5;
  int inputs[numInputs] = { echoPin, sensorPin, sensorPin2, sensorPin3 };
  int outputs[numOutputs] = { relayPin, relayPin2, relayPin3, trigPin, ledPin };

  for (int i = 0; i < numInputs; i++) {
    pinMode(inputs[i], INPUT);
  }

  for (int j = 0; j < numOutputs; j++) {
    pinMode(outputs[j], OUTPUT);
  }
}

void loop() {
  blinkLED(trigPin);

  for (int i = 0; i < 3; i++) {
    readAndAdjustFromSensor(sensorPin[i], relayPin[i]);
    delay (50);
  }

  if (getDistance() >= distanceThreshold) {
    blinkLED(ledPin);
    digitalWrite (greenPin, LOW);
  } else {
    digitalWrite (ledPin, LOW);
    digitalWrite (greenPin, HIGH);
  }
}

float getDistance(int pin) {
  int duration = pulseIn(pin, HIGH);
  return duration * distanceFactor / 2;
}

void readAndAdjustFromSensor(int pin, int relayPin) {
  int sensorValue = analogRead(pin);

  if (sensorValue >= humidityThreshold) {
    digitalWrite(relayPin, HIGH);
  } else {
    digitalWrite(relayPin, LOW);
  }
}

void blinkLED(int pin) {
  digitalWrite (pin, HIGH);
  delay (100);
  digitalWrite (pin, LOW);
  delay (100);
  digitalWrite (pin, HIGH);
  delay (100);
  digitalWrite (pin, LOW);
  delay (1000);
}